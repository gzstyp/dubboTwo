<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd

		http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!--
        发布出去的dubbo服务类所在包的注解(是消费的角色,充当消费者角色),本配置文件的作用:
        1、注解发布的dubbo服务所在的包
        2、配置消费方(消费服务的配置)
        3、配置支持两种常用的调用方式对应协议,含主机、路径、端口、超时设置
    -->
    <!--启用发布的dubbo服务实现类所在包的注解,dubboTwo作为消费方,就没有发布服务?不存在!,dubboOne调用dubboTwo-->
    <dubbo:annotation package="com.debug.mooc.dubbo.two.server.service.dubbo" />

    <!--注册中心zookeeper配置信息-->
    <dubbo:registry address="${dubbo.registry.address}" />

    <!--支持两种协议的调用：rpc-dubbo协议；http协议-rest api-url调用,全局的上下文路径 -->
    <dubbo:protocol name="rest" threads="500" contextpath="v1" server="tomcat" accepts="500"/>
    <dubbo:protocol name="dubbo" />

    <!--配置消费方信息,消费的角色方配置,#因为是服务消费,需要指定是消费谁发布服务名,此处的值是debug-->
	<dubbo:application name="dubboTwo-consume" owner="fwtaiApp" organization="dubbox"/>

    <!--调用服务生产者步骤：1、在本项目的pom.xml引入生产服务方api的jar包;2、就是在本配置文件spring-dubbo.xml引入服务提供方提供的dubbo服务,注意id的iDubboItemService值在controller层自动装配,尽量写成一致的-->
    <!--含提供哪个服务名、url主机端口号(如果两个服务不是在同一个机器上，需要提供url)、协议、版本号、超时-->
    <dubbo:reference interface="com.debug.mooc.dubbo.one.api.service.IDubboItemService" id="iDubboItemService"
                     url="${dubbo.server.provide.url}"
                     protocol="dubbo"
                     version="1.0"
                     timeout="20000" />

</beans>
